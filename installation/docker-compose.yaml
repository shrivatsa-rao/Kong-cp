version: '2.2'

networks:
  kong-edu-net:
    name: kong-edu-net
    driver: bridge

services:

  postgres:
    networks:
    - kong-edu-net
    image: postgres:13.1
    container_name: postgress
    hostname: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    environment:
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_USER: kong

  kong-migrations:
    networks:
    - kong-edu-net
    image: kong/kong-gateway:3.0.0.0
    container_name: kong-migrationss
    depends_on:
    - postgres        
    command: kong migrations bootstrap
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: password
     #KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
 
  kong-migrations-up:
    networks:
    - kong-edu-net
    image: kong/kong-gateway:3.0.0.0
    container_name: kong-migrations-upp
    depends_on:
    - kong-migrations
    command: kong migrations up && kong-migrations finish
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: password
     #KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}

  kong-cp:
    networks:
    - kong-edu-net
    image: kong/kong-gateway:3.0.0.0
    container_name: kong-cp
    hostname: kong-cp
    user: kong
    depends_on:
    - kong-migrations-up
    volumes:
    - ../logs:/srv/shared/logs
    - ../ssl-certs:/srv/shared/ssl
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    ports:
    - "8001-8006:8001-8006/tcp"
    - "8100:8100/tcp"
    - "8444-8447:8444-8447/tcp"
    environment:
      KONG_ROLE: control_plane
      KONG_CLUSTER_CERT: /srv/shared/ssl/hybrid/cluster.crt
      KONG_CLUSTER_CERT_KEY: /srv/shared/ssl/hybrid/cluster.key
      KONG_CLUSTER_DATA_PLANE_PURGE_DELAY: 600
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 http2 ssl"
      KONG_ADMIN_GUI_LISTEN: "0.0.0.0:8002, 0.0.0.0:8445 http2 ssl"
      KONG_PORTAL_GUI_LISTEN: "0.0.0.0:8003, 0.0.0.0:8446 http2 ssl"
      KONG_PORTAL_API_LISTEN: "0.0.0.0:8004, 0.0.0.0:8447 http2 ssl"
      KONG_STATUS_LISTEN: "0.0.0.0:8100"
      KONG_CLUSTER_LISTEN: "0.0.0.0:8005"
      KONG_CLUSTER_TELEMETRY_LISTEN: "0.0.0.0:8006"
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong          
      KONG_PG_MAX_CONCURRENT_QUERIES: 5
      #KONG_ADMIN_ACCESS_LOG: /srv/shared/logs/admin_access.log
      #KONG_ADMIN_ERROR_LOG: /srv/shared/logs/admin_error.log
      #KONG_ADMIN_GUI_ACCESS_LOG: /srv/shared/logs/admingui_access.log
      #KONG_ADMIN_GUI_ERROR_LOG: /srv/shared/logs/admingui_error.log
      #KONG_PORTAL_API_ACCESS_LOG: /srv/shared/logs/portalapi_access.log
      #KONG_PORTAL_API_ERROR_LOG: /srv/shared/logs/portalapi_error.log
      #KONG_PORTAL_GUI_ACCESS_LOG: /srv/shared/logs/portalgui_access.log
      #KONG_PORTAL_GUI_ERROR_LOG: /srv/shared/logs/portalgui_error.log
      #KONG_STATUS_ACCESS_LOG: /srv/shared/logs/status_access.log
      #KONG_STATUS_ERROR_LOG: /srv/shared/logs/status_error.log
      #KONG_AUDIT_LOG: "on"
      KONG_STATUS_SSL_CERT_KEY: "/srv/shared/ssl/wildcard.key"
      KONG_STATUS_SSL_CERT: "/srv/shared/ssl/wildcard.pem"
      KONG_ANONYMOUS_REPORTS: "off"
      KONG_VITALS: "on"
      KONG_VITALS_STRATEGY: prometheus
      KONG_VITALS_STATSD_ADDRESS: statsd:9125
      KONG_VITALS_TSDB_ADDRESS: prometheus:9090
      #KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
     #KONG_ENFORCE_RBAC: "on"
     #KONG_ADMIN_API_URI: "https://api.kong.lan:8444"
      KONG_ADMIN_API_URI: "http://127.0.0.1:8444"
      KONG_ADMIN_SSL_CERT_KEY: "/srv/shared/ssl/wildcard.key"
      KONG_ADMIN_SSL_CERT: "/srv/shared/ssl/wildcard.pem"
      KONG_ADMIN_GUI_URL: "http://127.0.0.1:8445"
      KONG_ADMIN_GUI_SSL_CERT_KEY: "/srv/shared/ssl/wildcard.key"
      KONG_ADMIN_GUI_SSL_CERT: "/srv/shared/ssl/wildcard.pem"
     #KONG_ADMIN_GUI_AUTH: "basic-auth"
     #KONG_ADMIN_GUI_SESSION_CONF: "{ \"cookie_name\": \"manager-session\", \"secret\": \"this_is_my_other_secret\", \"storage\": \"kong\", \"cookie_secure\":true, \"cooki>
      KONG_PORTAL: "on"
      KONG_PORTAL_GUI_PROTOCOL: "https"
     #KONG_PORTAL_GUI_HOST: "portal.kong.lan:8446"
      KONG_PORTAL_GUI_HOST: "http://127.0.0.1:8446"
      KONG_PORTAL_GUI_SSL_CERT_KEY: "/srv/shared/ssl/wildcard.key"
      KONG_PORTAL_GUI_SSL_CERT: "/srv/shared/ssl/wildcard.pem"
     #KONG_PORTAL_API_URL: "https://portal-api.kong.lan:8447"
      KONG_PORTAL_API_URL: "http://127.0.0.1:8447"
      KONG_PORTAL_API_SSL_CERT_KEY: "/srv/shared/ssl/wildcard.key"
      KONG_PORTAL_API_SSL_CERT: "/srv/shared/ssl/wildcard.pem"
      #KONG_PORTAL_AUTH: "basic-auth"
      #KONG_PORTAL_SESSION_CONF: "{\"cookie_name\":\"portal-session\",\"secret\":\"this_is_my_secret\",\"storage\":\"kong\",\"cookie_secure\":true, \"cookie_domain\":\".la>
      KONG_PORTAL_EMAIL_VERIFICATION: "off"
      KONG_PORTAL_EMAILS_FROM: "kongtest@gmail.com"
      KONG_PORTAL_EMAILS_REPLY_TO: "kongtest@gmail.com"
      KONG_ADMIN_EMAILS_FROM: "kongtest@gmail.com"
      KONG_ADMIN_EMAILS_REPLY_TO: "kongtest@gmail.com"
      KONG_SMTP_MOCK: "off"
      KONG_SMTP_ADMIN_EMAILS: "kongtest@gmail.com"
      KONG_SMTP_HOST: "smtp"
      KONG_SMTP_PORT: 1025
     #KONG_SMTP_DOMAIN: ${KONG_SMTP_DOMAIN}
      KONG_NGINX_WORKER_PROCESSES: 1
      KONG_LUA_SSL_TRUSTED_CERTIFICATE: "system"
      
  smtp-server:
    networks:
    - kong-edu-net
    image: reachfive/fake-smtp-server:0.8.1
    container_name: smtp
    hostname: smtp
    healthcheck:
      test: ["CMD-SHELL", "exit 0"]
      interval: 16s
      timeout: 16s
      retries: 16        
    restart: on-failure
    ports:
    - "1080:1080/tcp"

  mockbin:
    networks:
    - kong-edu-net
    image: mashape/mockbin:latest
    container_name: mockbin
    hostname: mockbin
    healthcheck:
      test: ["CMD-SHELL", "exit 0"]
      interval: 30s
      timeout: 30s
      retries: 3        
    restart: on-failure
    ports:
    - "8888:8080/tcp"

  redis:
    networks:
    - kong-edu-net
    image: redis:alpine3.15
    container_name: redis
    hostname: redis
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 30s
      retries: 3        
    restart: on-failure
    ports:
    - "6379:6379/tcp"

  prometheus:
    networks:
    - kong-edu-net
    image: prom/prometheus:v2.34.0
    container_name: prometheus
    hostname: prometheus
    command: --config.file=/etc/prometheus/prometheus.yaml --log.level=debug
    healthcheck:
      test: ["CMD", "wget", "-S", "--spider", "http://prometheus:9090"]
      interval: 10s
      timeout: 15s
      retries: 10  
    ports:
    - 9090:9090
    volumes:
    - ../misc/prometheus.yaml:/etc/prometheus/prometheus.yaml

  statsd:
    networks:
    - kong-edu-net
    image: kong/statsd-exporter-advanced:0.3.1
    container_name: statsd
    hostname: statsd
    depends_on:
    - prometheus
    healthcheck:
      test: ["CMD", "wget", "-S", "--spider", "http://statsd:9102"]
      interval: 10s
      timeout: 15s
      retries: 10 
    command: --statsd.mapping-config=/tmp/statsd.rules.yaml --statsd.listen-unixgram=''
    ports:
    - 9125:9125
    - 9102:9102
    volumes:
    - ../misc/statsd.rules.yaml:/tmp/statsd.rules.yaml

  grafana:
    networks:
    - kong-edu-net
    image: grafana/grafana:8.4.6
    container_name: grafana
    hostname: grafana
    depends_on:
    - prometheus
    healthcheck:
      test: ["CMD", "wget", "-S", "--spider", "http://grafana:3000"]
      interval: 10s
      timeout: 15s
      retries: 10 
    ports:
    - 3000:3000
